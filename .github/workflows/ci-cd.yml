name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Frontend Workflow
  client:
    name: Client CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          cd client
          npm install

      # Step 4: Clean cached Jest config
      - name: Clean Cached Jest Config
        run: |
          cd client
          find . -name "jest.config.js" -exec rm -f {} \;

      # Step 5: Lint Client with --fix
      - name: Lint Client (with fix)
        run: |
          cd client
          npm run lint -- --fix

      # Step 6: Build Client
      - name: Build Client
        run: |
          cd client
          npm run build

      # Step 7: Test Client
      - name: Test Client
        run: |
          cd client
          npm test -- --coverage --config jest.config.ts

      - name: Upload Client Coverage
        uses: actions/upload-artifact@v3
        with:
          name: client-coverage
          path: client/coverage

  # Server Workflow
  server:
    name: Server CI
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          cd server
          npm install

      # Step 4: Lint Server with --fix
      - name: Lint Server (with fix)
        run: |
          cd server
          npm run lint -- --fix

      # Step 5: Test Server
      - name: Test Server
        env:
          MONGODB_URI: mongodb://localhost:27017/test
          TEST_MONGODB_URI: mongodb://localhost:27017/test
        run: |
          cd server
          npm test -- --coverage

      # Step 6: Upload Server Coverage
      - name: Upload Server Coverage
        uses: actions/upload-artifact@v3
        with:
          name: server-coverage
          path: server/coverage

  # Microservice Workflow
  microservice:
    name: Microservice CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      # Step 3: Make Maven Wrapper Executable
      - name: Grant Execute Permission to Maven Wrapper
        run: |
          cd microservice
          chmod +x mvnw

      # Step 4: Build microservice
      - name: Build Microservice
        run: |
          cd microservice
          ./mvnw clean install

      # Step 5: Test microservice
      - name: Test Microservice
        run: |
          cd microservice
          ./mvnw test

  # Deployment Workflow
  deploy:
    name: Deployment CI/CD
    needs: [client, server, microservice]
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Placeholder Deployment for Frontend
      - name: Deploy Client
        if: success()
        run: |
          echo "Client deployment placeholder. Replace with actual deployment script."

      # Placeholder Deployment for Server
      - name: Deploy server
        if: success()
        run: |
          echo "Server deployment placeholder. Replace with actual deployment script."

      # Placeholder Deployment for Microservice
      - name: Deploy Microservice
        if: success()
        run: |
          echo "Microservice deployment placeholder. Replace with actual deployment script."
