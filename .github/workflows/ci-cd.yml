name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Frontend Workflow
  client:
    name: Client CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          cd client
          npm install

      # Step 4: Lint Client with --fix
      - name: Lint Client (with fix)
        run: |
          cd client
          npm run lint -- --fix

      # Step 5: Build Client
      - name: Build Client
        run: |
          cd client
          npm run build

  # Server Workflow
  server:
    name: Server CI
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          cd server
          npm install

      # Step 4: Lint Server with --fix
      - name: Lint Server (with fix)
        run: |
          cd server
          npm run lint -- --fix

  # Microservice Workflow
  microservice:
    name: Microservice CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      # Step 3: Make Maven Wrapper Executable
      - name: Grant Execute Permission to Maven Wrapper
        run: |
          cd microservice
          chmod +x mvnw

      # Step 4: Build microservice
      - name: Build Microservice
        run: |
          cd microservice
          ./mvnw clean install

  # Deployment Workflow
  deploy:
    name: Deployment CI/CD
    needs: [client, server, microservice]
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Frontend Deployment to Render
      - name: Deploy Client to Render
        if: success()
        run: |
         echo "Triggering Render deployment for frontend"
         curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"serviceId": "srv-frontend12345"}' \
         https://api.render.com/v1/services/srv-frontend12345/deploys

      # Backend Deployment to Render
      - name: Deploy Server to Render
        if: success()
        run: |
          echo "Triggering Render deployment for backend"
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"serviceId": "srv-backend12345"}' \
          https://api.render.com/v1/services/srv-backend12345/deploys

      # Placeholder for Microservice Deployment
      - name: Deploy Microservice
        if: success()
        run: |
         echo "Microservice deployment placeholder. Replace with actual deployment script."
