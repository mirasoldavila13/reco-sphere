name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Frontend Workflow
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          cd client
          npm install

      # Step 4: Clean cached Jest config
      - name: Clean Cached Jest Config
        run: |
          cd client
          find . -name "jest.config.js" -exec rm -f {} \;

      # Step 5: Lint Client with --fix
      - name: Lint Frontend (with fix)
        run: |
          cd client
          npm run lint -- --fix

      # Step 6: Build Client
      - name: Build Frontend
        run: |
          cd client
          npm run build

      # Step 7: Test Client
      - name: Test Frontend
        run: |
          cd client
          npm test -- --coverage --config jest.config.ts

      - name: Upload Client Coverage
        uses: actions/upload-artifact@v3
        with:
          name: client-coverage
          path: client/coverage

  # Backend Workflow
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          cd server
          npm install

      # Step 4: Lint Server with --fix
      - name: Lint Server (with fix)
        run: |
          cd server
          npm run lint -- --fix

      # Step 5: Test Server
      - name: Test Server
        run: |
          cd server
          npm test -- --coverage

      # Step 6: Upload Server Coverage
      - name: Upload Server Coverage
        uses: actions/upload-artifact@v3
        with:
          name: server-coverage
          path: server/coverage

  # Microservice Workflow
  microservice:
    name: Microservice CI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Build microservice
      - name: Build Microservice
        run: |
          cd microservice
          ./mvnw clean install

      # Step 4: Test microservice
      - name: Test Microservice
        run: |
          cd microservice
          ./mvnw test

  # Deployment Workflow (Placeholder for now)
  deploy:
    name: Deployment CI/CD
    needs: [frontend, backend, microservice]
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Placeholder Deployment for Frontend
      - name: Deploy Frontend
        if: success()
        run: |
          echo "Frontend deployment placeholder. Replace with actual deployment script."

      # Placeholder Deployment for Backend
      - name: Deploy Backend
        if: success()
        run: |
          echo "Backend deployment placeholder. Replace with actual deployment script."

      # Placeholder Deployment for Microservice
      - name: Deploy Microservice
        if: success()
        run: |
          echo "Microservice deployment placeholder. Replace with actual deployment script."
